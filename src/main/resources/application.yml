server:
    port: 9000
    servlet:
        context-path: /t100
spring:
    # 配置数据源
    datasource:
        url: jdbc:mysql://127.0.0.1:3306/t100?serverTimezone=Asia/Shanghai&allowMultiQueries=true&useUnicode=true&characterEncoding=utf8
        username: root
        password: root1234
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
    servlet:
        multipart:
            max-request-size: 100MB
            max-file-size: 100MB
# mybatis-plus相关配置
mybatis-plus:
    # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
    mapper-locations: classpath:mapper/*.xml
    # 指定POJO扫描包来让mybatis自动扫描到自定义POJO
    type-aliases-package: com.example.demo.entity
    # 以下配置均有默认值,可以不设置
    global-config:
        db-config:
            #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
            id-type: auto
            #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
            field-strategy: NOT_EMPTY
            #数据库类型
            db-type: MYSQL
    configuration:
        # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
        map-underscore-to-camel-case: true
        # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
        call-setters-on-nulls: true
        # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
ok:
    http:
        connect-timeout: 30
        read-timeout: 30
        write-timeout: 30
        max-idle-connections: 200
        keep-alive-duration: 300
app-parameters:
    appid: wx9f54c36fa32d99d3
    addSecret: f1079e30caa8116ce1b36a4227b89ef1